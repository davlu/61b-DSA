package byow.Core;

import byow.TileEngine.TERenderer;
import byow.TileEngine.TETile;

import java.util.ArrayList;
import java.util.List;


public class Engine {
    TERenderer ter = new TERenderer();
    /* Feel free to change the width and height. */
    public static final int WIDTH = 60;
    public static final int HEIGHT = 30;

    /**
     * Method used for exploring a fresh world. This method should handle all inputs,
     * including inputs from the main menu.
     */
    public void interactWithKeyboard() {
    }

    /**
     * Method used for autograding and testing your code. The input string will be a series
     * of characters (for example, "n123sswwdasdassadwas", "n123sss:q", "lwww". The engine should
     * behave exactly as if the user typed these characters into the engine using
     * interactWithKeyboard.
     *
     * Recall that strings ending in ":q" should cause the game to quite save. For example,
     * if we do interactWithInputString("n123sss:q"), we expect the game to run the first
     * 7 commands (n123sss) and then quit and save. If we then do
     * interactWithInputString("l"), we should be back in the exact same state.
     *
     * In other words, both of these calls:
     *   - interactWithInputString("n123sss:q")
     *   - interactWithInputString("lww")
     *
     * should yield the exact same world state as:
     *   - interactWithInputString("n123sssww")
     *
     * @param input the input string to feed to your program
     * @return the 2D TETile[][] representing the state of the world
     */
    public TETile[][] interactWithInputString(String input) {
        ter = new TERenderer();
        ter.initialize(WIDTH,HEIGHT);
        Character charOfInterest = Character.toLowerCase(input.charAt(0));
        long seed = 0;
        List<Character> moves = new ArrayList<>();
        if (charOfInterest != 'n') {
            throw new java.lang.RuntimeException("N or n to load new game state.");
        }
        for (int i = 1; i < input.length(); i++) {
            charOfInterest = Character.toLowerCase(input.charAt(i));
            if (charOfInterest == ':') {
                i += 1;
                charOfInterest = input.charAt(i);
                if (charOfInterest != 'q') {
                    throw new java.lang.RuntimeException(":q is the exit sequence");
                } else {
                    break;
                }
            } else if (Character.isDigit(charOfInterest)) {
                seed = seed * 10 + ((int) charOfInterest - 48);
            }
            charOfInterest = Character.toLowerCase(charOfInterest);
            if (charOfInterest == 'w' || charOfInterest == 'a' || charOfInterest == 's'
                    || charOfInterest == 'd') {
                moves.add(charOfInterest);
            }

        }
        TETile[][] tiles = new Generator(seed, WIDTH, HEIGHT).spawn(moves);
        ter.renderFrame(tiles);
        return tiles;
    }

    public static void main(String[] args) {
        Engine testEngine = new Engine();
        testEngine.interactWithInputString("N543SSSWWWWWWWW:q");
    }
}
